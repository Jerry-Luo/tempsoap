package com.test;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.7
 * 2020-08-07T00:50:53.062+08:00
 * Generated source version: 3.3.7
 *
 */
@WebServiceClient(name = "StaffWebService",
                  wsdlLocation = "",
                  targetNamespace = "http://tempuri.org/")
public class StaffWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "StaffWebService");
    public final static QName StaffWebServiceSoap12 = new QName("http://tempuri.org/", "StaffWebServiceSoap12");
    public final static QName StaffWebServiceSoap = new QName("http://tempuri.org/", "StaffWebServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://122.189.155.124:733/StaffWebService.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(StaffWebService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/Jerry/Preference/workspace/myworkspace/cxf-client-demo/test.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StaffWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public StaffWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StaffWebService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public StaffWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public StaffWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public StaffWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns StaffWebServiceSoap
     */
    @WebEndpoint(name = "StaffWebServiceSoap12")
    public StaffWebServiceSoap getStaffWebServiceSoap12() {
        return super.getPort(StaffWebServiceSoap12, StaffWebServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StaffWebServiceSoap
     */
    @WebEndpoint(name = "StaffWebServiceSoap12")
    public StaffWebServiceSoap getStaffWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(StaffWebServiceSoap12, StaffWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns StaffWebServiceSoap
     */
    @WebEndpoint(name = "StaffWebServiceSoap")
    public StaffWebServiceSoap getStaffWebServiceSoap() {
        return super.getPort(StaffWebServiceSoap, StaffWebServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StaffWebServiceSoap
     */
    @WebEndpoint(name = "StaffWebServiceSoap")
    public StaffWebServiceSoap getStaffWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(StaffWebServiceSoap, StaffWebServiceSoap.class, features);
    }

}
